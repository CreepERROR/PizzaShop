version: '3'
networks:
  pizza-shop.net:
    driver: bridge
  service.net:
    driver: bridge
services:

  # service api.pizza-shop : api pour la prise de commandes
  #
  api.pizza-shop:
    image: 'canals/php:8.2'
    env_file: ./shop.env
    ports:
      - '2080:80'
      - '1443:443'
    volumes:
      - ../shop.pizza-shop/public:/var/www/html
      - ../shop.pizza-shop:/var/www
    working_dir: /var/www/
    networks:
      pizza-shop.net:
        aliases:
          - api.pizza-shop.local
    depends_on:
      rabbitmq:
        condition: service_healthy




  api.gateway:
    image: 'canals/php:8.2'
    env_file: ./gate.env
    ports:
      - '3080:80'
      - '1543:443'
    volumes:
        - ../gateway.pizza-shop/public:/var/www/html
        - ../gateway.pizza-shop:/var/www
    working_dir: /var/www/
    networks:
      pizza-shop.net:
        aliases:
          - gateway.pizza-shop.local
    depends_on:
      - api.pizza-shop
      - api.pizza-auth



  # service sql pour le stockage des commandes -
  # utilisé par l'api order
  pizza-shop.commande.db:
    image: 'mariadb:latest'
    command: '--default-authentication-plugin=mysql_native_password --character-set-server=utf8 --collation-server=utf8_general_ci'
    env_file: ./shop.env
    ports:
      - '18252:80'
    networks:
      - pizza-shop.net
    volumes:
      - ../shop.pizza-shop/sql:/var/sql

  # service sql pour le catalogue des pizzas -
  # utilisé par l'api order
  pizza-shop.catalogue.db:
    image: 'postgres:latest'
    env_file: ./cat.env
    ports:
      - '18251:80'
    networks:
      - pizza-shop.net
    volumes:
      - ../shop.pizza-shop/sql:/var/sql'
  #
  # service administration des bases sql
  #
  adminer:
    image: adminer
    ports:
      - '8080:8080'
    networks:
      - pizza-shop.net

#####################################
##  AUTH Service : service d'authentification JWT
##  api api.auth : auth, check, refresh de token JWT
##  utilise sa propre base de données
#####################################
  api.pizza-auth:
    image: 'canals/php:8.2'
    env_file: ./auth.env
    ports:
      - '2780:80'
      - '2743:443'
    volumes:
      - ../auth.pizza-shop/public:/var/www/html
      - ../auth.pizza-shop:/var/www
    working_dir: /var/www
    networks:
      pizza-shop.net:
        aliases:
          - auth.pizza-shop.local
    depends_on:
      - pizza-shop.auth.db

  pizza-shop.auth.db:
    image: 'mariadb:latest'
    command: '--default-authentication-plugin=mysql_native_password --character-set-server=utf8 --collation-server=utf8_general_ci'
    env_file: ./auth.env
    ports:
      - '3308:3306'
    networks:
      - pizza-shop.net
    volumes:
      - ../auth.pizza-shop/sql:/var/sql
      - ../auth.pizza-shop/sql:/docker-entrypoint-initdb.d
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - '15672:15672'
      - '5672:5672'
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 8s
      timeout: 30s
      retries: 3
    networks:
      - pizza-shop.net
    volumes:
      - ../rabbitmq.pizza-shop:/var/lib/rabbitmq
    env_file: ./rab.env
    restart: always




  api.service:
    image: node:alpine
    networks:
      - service.net
    working_dir: /usr/app
    command: sh -c "npm i && npm run watch" #for development only
    #command: sh -c "npm i && npm start" #for production only
    volumes:
      - ../service-dir:/usr/app
    ports:
      - "3333:3000"
    environment:
      - "PORT: 3000"
      - "NODE_ENV: development"

  api.service.db:
    image: 'mariadb:latest'
    command: '--default-authentication-plugin=mysql_native_password --character-set-server=utf8 --collation-server=utf8_general_ci'
    env_file: ./service.env
    ports:
      - '3309:3306'
    networks:
        - service.net
        - pizza-shop.net
    volumes:
        - ../service-dir/sql:/var/sql
        - ../service-dir/sql:/docker-entrypoint-initdb.d


  version: '3'

  services:
    websocket-service:
      build:
        context: .
        dockerfile: Dockerfile
      ports:
        - "3000:3000"
      depends_on:
        - rabbitmq

    rabbitmq:
      image: "rabbitmq:3-management"
      ports:
        - "5672:5672"
        - "15672:15672"
      environment:
        RABBITMQ_DEFAULT_USER: "guest"
        RABBITMQ_DEFAULT_PASS: "guest"